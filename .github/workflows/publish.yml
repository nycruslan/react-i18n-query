name: Publish Package

on:
  push:
    branches:
      - main
    paths:
      - 'package.json'
    # Prevents retriggering the workflow on tag pushes
    tags-ignore:
      - 'v*'

jobs:
  publish:
    runs-on: ubuntu-latest
    env:
      NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          registry-url: 'https://registry.npmjs.org/'
          token: ${{ secrets.NPM_TOKEN }}
          always-auth: true

      - name: Verify npm auth token
        run: echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc

      - name: Install Dependencies
        run: npm ci

      - name: Lint and Build Package
        run: |
          npm run lint
          npm run build

      - name: Check and Publish Package
        run: |
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          PACKAGE_NAME=$(node -p "require('./package.json').name")

          echo "Current version: $CURRENT_VERSION"
          echo "Package name: $PACKAGE_NAME"

          # Fetch all npm versions with `npm info` to ensure accuracy
          ALL_VERSIONS=$(npm info "$PACKAGE_NAME" versions --json)

          # Check if the current version is in the list of published versions
          if echo "$ALL_VERSIONS" | grep -q "\"$CURRENT_VERSION\""; then
            echo "Version $CURRENT_VERSION already exists. Skipping publish."
          else
            echo "Publishing new version $CURRENT_VERSION."

            # Publish the package and capture the exit code
            npm publish --access public || PUBLISH_EXIT_CODE=$?

            # Check if the error was specifically a "version already exists" error
            if [ "$PUBLISH_EXIT_CODE" == "1" ]; then
              echo "Publish returned exit code 1, but this might be due to a timing issue. Continuing..."
            fi
          fi
