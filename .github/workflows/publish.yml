name: Publish Package

on:
  push:
    branches:
      - main
    paths:
      - 'package.json'

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'npm'

      # Step 3: Install dependencies
      - name: Install dependencies
        run: npm ci

      # Step 4: Check for new version
      - name: Verify new version
        id: version_check
        run: |
          CURRENT_VERSION=$(jq -r '.version' package.json)
          NPM_VERSION=$(npm view react-i18n-query@${CURRENT_VERSION} version || echo 'not_found')
          if [ "$NPM_VERSION" == "$CURRENT_VERSION" ]; then
            echo "Version $CURRENT_VERSION already exists on npm. Skipping publish."
            echo "should_publish=false" >> $GITHUB_ENV
          else
            echo "New version detected: $CURRENT_VERSION"
            echo "should_publish=true" >> $GITHUB_ENV
          fi

      # Step 5: Build the package (only if new version)
      - name: Build package
        if: env.should_publish == 'true'
        run: npm run build

      # Step 6: Publish to npm (only if new version)
      - name: Publish to npm
        if: env.should_publish == 'true'
        run: |
          echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc
          npm publish --access public

      # Step 7: Add delay to ensure npm registry is updated
      - name: Wait for npm registry update
        if: env.should_publish == 'true'
        run: sleep 60
