name: Publish Package (Dry Run)

on:
  push:
    branches:
      - main
    paths:
      - 'package.json'
    # Prevents retriggering the workflow on tag pushes
    tags-ignore:
      - 'v*'

jobs:
  publish:
    runs-on: ubuntu-latest
    env:
      NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      DRY_RUN: true # Environment variable to indicate dry run

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          registry-url: 'https://registry.npmjs.org/'
          token: ${{ secrets.NPM_TOKEN }}
          always-auth: true

      - name: Verify npm auth token
        run: echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc

      - name: Install Dependencies
        run: npm ci

      - name: Lint and Build Package
        run: |
          npm run lint
          npm run build

      - name: Check and Publish Package (Dry Run)
        run: |
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          PACKAGE_NAME=$(node -p "require('./package.json').name")

          echo "Current version: $CURRENT_VERSION"
          echo "Package name: $PACKAGE_NAME"

          # Fetch all npm versions with `npm info` to ensure accuracy
          ALL_VERSIONS=$(npm info "$PACKAGE_NAME" versions --json)

          # Check if the current version is in the list of published versions
          if echo "$ALL_VERSIONS" | grep -q "\"$CURRENT_VERSION\""; then
            echo "Version $CURRENT_VERSION already exists. Skipping publish."
          else
            echo "Publishing new version $CURRENT_VERSION (Dry Run)."

            # Perform a dry-run to test the publish without actually publishing
            if [ "$DRY_RUN" = "true" ]; then
              npm publish --access public --dry-run
              echo "Dry run complete. Exiting to prevent infinite loop."
              exit 0
            else
              npm publish --access public

              # Adding a longer delay to allow npm registry to reflect the new publish
              sleep 30

              # Check if tag already exists to avoid duplication
              if git tag --list | grep -q "v$CURRENT_VERSION"; then
                echo "Tag v$CURRENT_VERSION already exists. Skipping tag creation."
              else
                echo "Creating and pushing tag v$CURRENT_VERSION."
                git tag "v$CURRENT_VERSION"
                git push origin "v$CURRENT_VERSION"
              fi
            fi
          fi
