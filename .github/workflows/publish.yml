name: Publish Package

on:
  push:
    branches:
      - main
    paths:
      - 'package.json'

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install and Cache Dependencies
        run: npm ci
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Lint and Build Package
        run: |
          npm run lint
          npm run build

      - name: Set Version and Package Name
        id: version_setup
        run: |
          echo "CURRENT_VERSION=$(node -p "require('./package.json').version")" >> $GITHUB_ENV
          echo "PACKAGE_NAME=$(node -p "require('./package.json').name")" >> $GITHUB_ENV

      - name: Check Package Version
        id: version_check
        run: |
          if npm view "$PACKAGE_NAME@$CURRENT_VERSION" > /dev/null 2>&1; then
            echo "version-exists=true" >> $GITHUB_OUTPUT
          else
            echo "version-exists=false" >> $GITHUB_OUTPUT
          fi
        env:
          PACKAGE_NAME: ${{ env.PACKAGE_NAME }}
          CURRENT_VERSION: ${{ env.CURRENT_VERSION }}

      - name: Publish Package
        if: steps.version_check.outputs.version-exists == 'false'
        run: |
          echo "Publishing new version $CURRENT_VERSION."
          npm publish --access public
          if [ -z "$(git tag -l "v$CURRENT_VERSION")" ]; then
            git tag "v$CURRENT_VERSION"
            git push origin "v$CURRENT_VERSION"
          else
            echo "Tag v$CURRENT_VERSION already exists."
          fi
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          PACKAGE_NAME: ${{ env.PACKAGE_NAME }}
          CURRENT_VERSION: ${{ env.CURRENT_VERSION }}
